import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.Test;

class SwimmerTester {

	@Test
	void testSwimmer() {
		Swimmer testSwimmer = new Swimmer();
		assertEquals(testSwimmer.getSwimmerID(), 0);
		assertEquals(testSwimmer.getSwimmerName(), "");
		assertEquals(testSwimmer.getIsMale(), false);
		assertArrayEquals(testSwimmer.getAllEvents(), new Event[0]);
	}

	@Test
	void testSwimmerIntStringBooleanEventArray() {
		Event[] allEvents = new Event[5];
		for (int x = 0; x < 5; ++x)
			allEvents[x] = new Event(x, "event", new double[0], new int[0]);
		Swimmer testSwimmer = new Swimmer(11943, "test swimmer", true, allEvents);
		assertEquals(testSwimmer.getSwimmerID(), 11943);
		assertEquals(testSwimmer.getSwimmerName(), "test swimmer");
		assertTrue(testSwimmer.getIsMale());
		assertArrayEquals(testSwimmer.getAllEvents(), allEvents);
	}

	@Test
	void testGetSwimmerID() {
		fail("Not yet implemented");
	}

	@Test
	void testSetSwimmerID() {
		fail("Not yet implemented");
	}

	@Test
	void testGetSwimmerName() {
		fail("Not yet implemented");
	}

	@Test
	void testSetSwimmerName() {
		fail("Not yet implemented");
	}

	@Test
	void testGetIsMale() {
		fail("Not yet implemented");
	}

	@Test
	void testSetIsMale() {
		fail("Not yet implemented");
	}

	@Test
	void testGetAllEvents() {
		fail("Not yet implemented");
	}

	@Test
	void testSetAllEvents() {
		fail("Not yet implemented");
	}

	@Test
	void testAddEvent() {
		fail("Not yet implemented");
	}

}
